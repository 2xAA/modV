(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{72:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("To follow this guide, we'd recommend having some experience with:")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("ISF's JSON block also defines the author, description of the shader and render passes. You can learn more about the Interactive Shader Format specification on their website: "),n("a",{attrs:{href:"https://www.interactiveshaderformat.com/spec",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.interactiveshaderformat.com/spec"),n("OutboundLink")],1)]),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("Save a blank JavaScript file in the "),n("router-link",{attrs:{to:"/guide/mediaManager.html#media-folder"}},[t._v("Media Manager's media directory")]),t._v(". This will need to be placed in a "),n("code",[t._v("module")]),t._v(" folder within a Project folder. e.g. "),n("code",[t._v("[media path]/[project]/module")]),t._v(".")],1),t._v(" "),n("p",[t._v("By saving your Module here the Media Manager will compile your code and send it to modV on every file save. If you've placed your Module within a Layer already, you'll need to remove it from the Layer and drag your Module in again from the Gallery to use the updated Module.")]),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("Let's get started by exporting an Object. modV Modules are written out as a plain Object.")]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),n("p",[t._v("If you have a larger shader or require syntax highlighting, you may import your shaders using:")]),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._v(" "),n("p",[t._v("Please refer to section 4 of Writing A Shader Module for prop syntax.")]),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("The following code puts together everything from above:")]),t._v(" "),t._m(21)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"writing-an-isf-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#writing-an-isf-module","aria-hidden":"true"}},[this._v("#")]),this._v(" Writing an ISF Module")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("We're going to write a Module which works with the built-in "),e("code",[this._v("isf")]),this._v(" Renderer.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("JavaScript (ES6+)")]),this._v(" "),e("li",[this._v("GLSL\n"),e("ul",[e("li",[this._v("if you don't already have experience with GLSL then we recommend ???")])])]),this._v(" "),e("li",[this._v("Interactive Shader Format")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"what-is-isf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-isf","aria-hidden":"true"}},[this._v("#")]),this._v(" What is ISF?")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The "),e("strong",[this._v("I")]),this._v("nteractive "),e("strong",[this._v("S")]),this._v("hader "),e("strong",[this._v("F")]),this._v("ormat is a GLSL format which provides helpful method, common uniforms and also includes a JSON block at the top of the file, defining inputs which can be parsed to create user editable controls.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1-create-a-new-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-create-a-new-file","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. Create a new file")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2-export-an-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-export-an-object","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. Export an Object")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3-set-up-the-meta"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-set-up-the-meta","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. Set up the Meta")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Next up, we'll need to describe our Module with a meta Object block.\nLet's define the Module type as "),e("code",[this._v("isf")]),this._v(" and give our Module a name.")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  meta"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// this tells modV our Module should be used with the isf renderer")]),t._v("\n    type"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'isf'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// our Module's name")]),t._v("\n    name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Echo Trace'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_4-define-our-shaders"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-define-our-shaders","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. Define our Shaders")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("In "),e("code",[this._v("isf")]),this._v(" type Modules, there are two properties on the Module body to define the Shaders we want to use:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("fragmentShader")])]),this._v(" "),e("li",[e("code",[this._v("vertexShader")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The "),e("code",[this._v("fragmentShader")]),this._v(" is required, but the "),e("code",[this._v("vertexShader")]),this._v(" is optional. Both variables only accept Strings.")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fragmentShader "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'circles.frag'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" vertexShader "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'circles.vert'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("We'll only be using the "),e("code",[this._v("fragmentShader")]),this._v(" property in this guide:")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// meta: { ... },")]),t._v("\n  \n  fragmentShader"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n    /*{\n      "DESCRIPTION": "Pixel with brightness levels below the threshold do not update.",\n      "CREDIT": "by VIDVOX",\n      "CATEGORIES": [\n        "Glitch"\n      ],\n      "INPUTS": [\n        {\n          "NAME": "inputImage",\n          "TYPE": "image"\n        },\n        {\n          "NAME": "thresh",\n          "LABEL": "Threshold",\n          "TYPE": "float",\n          "MIN": 0,\n          "MAX": 1,\n          "DEFAULT": 0.25\n        },\n        {\n          "NAME": "gain",\n          "LABEL": "Gain",\n          "TYPE": "float",\n          "MIN": 0,\n          "MAX": 2,\n          "DEFAULT": 1\n        },\n        {\n          "NAME": "hardCutoff",\n          "LABEL": "Hard Cutoff",\n          "TYPE": "bool",\n          "DEFAULT": true\n        },\n        {\n          "NAME": "invert",\n          "LABEL": "Invert",\n          "TYPE": "bool",\n          "DEFAULT": false\n        }\n      ],\n      "PASSES": [\n        {\n          "TARGET": "bufferVariableNameA",\n          "persistent": true\n        },\n        {}\n      ]\n    }*/\n\n    void main() {\n        vec4 freshPixel = IMG_PIXEL(inputImage,gl_FragCoord.xy);\n        vec4 stalePixel = IMG_PIXEL(bufferVariableNameA,gl_FragCoord.xy);\n        float brightLevel = (freshPixel.r + freshPixel.b + freshPixel.g) / 3.0;\n        if (invert) {\n\t\t  brightLevel = 1.0 - brightLevel;\n        }\n        brightLevel = brightLevel * gain;\n        if (hardCutoff)\t{\n          if (brightLevel < thresh) {\n            brightLevel = 1.0;\n          } else {\n           brightLevel = 0.0;\n          }\n        }\n        gl_FragColor = mix(freshPixel,stalePixel, brightLevel);\n    }\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_5-props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-props","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. Props")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("isf")]),this._v(" Modules' props are primarily auto-generated from the JSON block at the top of the file. However, if custom controls are required, props may be defined with the same uniform name as in the shader.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_6-putting-everything-together"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-putting-everything-together","aria-hidden":"true"}},[this._v("#")]),this._v(" 6. Putting everything together")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  meta"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'isf'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Echo Trace'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  fragmentShader"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v('`\n    /*{\n      "DESCRIPTION": "Pixel with brightness levels below the threshold do not update.",\n      "CREDIT": "by VIDVOX",\n      "CATEGORIES": [\n        "Glitch"\n      ],\n      "INPUTS": [\n        {\n          "NAME": "inputImage",\n          "TYPE": "image"\n        },\n        {\n          "NAME": "thresh",\n          "LABEL": "Threshold",\n          "TYPE": "float",\n          "MIN": 0,\n          "MAX": 1,\n          "DEFAULT": 0.25\n        },\n        {\n          "NAME": "gain",\n          "LABEL": "Gain",\n          "TYPE": "float",\n          "MIN": 0,\n          "MAX": 2,\n          "DEFAULT": 1\n        },\n        {\n          "NAME": "hardCutoff",\n          "LABEL": "Hard Cutoff",\n          "TYPE": "bool",\n          "DEFAULT": true\n        },\n        {\n          "NAME": "invert",\n          "LABEL": "Invert",\n          "TYPE": "bool",\n          "DEFAULT": false\n        }\n      ],\n      "PASSES": [\n        {\n          "TARGET": "bufferVariableNameA",\n          "persistent": true\n        },\n        {}\n      ]\n    }*/\n\n    void main() {\n        vec4 freshPixel = IMG_PIXEL(inputImage,gl_FragCoord.xy);\n        vec4 stalePixel = IMG_PIXEL(bufferVariableNameA,gl_FragCoord.xy);\n        float brightLevel = (freshPixel.r + freshPixel.b + freshPixel.g) / 3.0;\n        if (invert) {\n\t\t  brightLevel = 1.0 - brightLevel;\n        }\n        brightLevel = brightLevel * gain;\n        if (hardCutoff)\t{\n          if (brightLevel < thresh) {\n            brightLevel = 1.0;\n          } else {\n           brightLevel = 0.0;\n          }\n        }\n        gl_FragColor = mix(freshPixel,stalePixel, brightLevel);\n    }\n  `')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],!1,null,null,null);s.options.__file="writingAnIsfModule.md";e.default=s.exports}}]);