webpackJsonp([13],{858:function(t,n){t.exports='/*{\n\t"CREDIT": "by echophons",\n\t"DESCRIPTION": "",\n\t"CATEGORIES": [ "generator"\n\t],\n\t"INPUTS": [\n\t\t{\n\t\t\t"NAME": "h",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 0.5,\n\t\t\t"MIN": 0.0,\n\t\t\t"MAX": 1.0\n\t\t},\n\t\t{\n\t\t\t"NAME": "j",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 0.5,\n\t\t\t"MIN": 0.0,\n\t\t\t"MAX": 1.0\n\t\t}\n\t]\n}*/\n\n// edit of http://glslsandbox.com/e#18752.0\nuniform vec2 mouse;\n\nvec3   iResolution = vec3(RENDERSIZE, 1.0);\nfloat  iGlobalTime = TIME;\n\nfloat gTime = iGlobalTime*0.5;\n\nvoid main( void )\n{\n\tfloat f = 3.0;\n\tfloat g = 3.0;\n\tvec2 res = iResolution.xy;\n\tvec2 mou = mouse.xy;\n\n\t//if (mouse.x < 0.5)\n\t//{\n\tmou.x = sin(gTime * .3)*sin(gTime * .17) * 1. + sin(gTime * .3);\n\tmou.y = (1.0-cos(gTime * .632))*sin(gTime * .131)*1.0+cos(gTime * .3);\n\tmou = (mou+1.0) * res;\n\t//}\n\tvec2 z = ((-res+2.0 * gl_FragCoord.xy) / res.y);\n\tvec2 p = ((-res+2.0+mou) / res.y) * j;\n\tfor( int i = 0; i < 25; i++)\n\t{\n\t\tfloat d = dot(z,z);\n\t\tz = (vec2( z.x, -z.y ) / d) + p * h;\n\t\tz.x =  1.0-abs(z.x);\n\t\tf = max( f-d, (dot(z-p,z-p) ));\n\t\tg = min( g*d, sin(dot(z+p,z+p))+1.0);\n\t}\n\tf = abs(-log(f) / 3.5);\n\tg = abs(-log(g) / 8.0);\n\tgl_FragColor = vec4(min(vec3(g, g*f, f), 1.0),1.0);\n}\n'}});