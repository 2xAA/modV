{"version":3,"sources":["webpack:///./src/modv/sample-modules/Polygon.js"],"names":[],"mappings":";;;;;;;;AAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gEAAgE;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,mCAAmC;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"static/js/75.39b9e7af6a1577f2db97.js","sourcesContent":["import { Module2D } from 'modv';\n\nclass Polygon extends Module2D {\n  constructor() {\n    super({\n      info: {\n        name: 'Polygon',\n        author: '2xAA',\n        version: 0.2,\n        meyda: ['rms', 'zcr'],\n      },\n    });\n\n    const controls = [];\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'intensity',\n      label: 'RMS/ZCR Intensity',\n      varType: 'int',\n      min: 0,\n      max: 30,\n      step: 1,\n      default: 15,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'shapeSize',\n      label: 'Shape Size',\n      varType: 'int',\n      min: 0,\n      max: 300,\n      step: 1,\n      default: 60,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'strokeWeight',\n      label: 'Stroke Weight',\n      varType: 'int',\n      min: 1,\n      max: 20,\n      step: 1,\n      default: 1,\n      strict: true,\n    });\n\n    controls.push({\n      type: 'checkboxControl',\n      variable: 'fill',\n      label: 'Fill',\n      checked: false,\n    });\n\n    controls.push({\n      type: 'checkboxControl',\n      variable: 'rotateToggle',\n      label: 'Rotate',\n      checked: false,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'rotateSpeed',\n      label: 'Rotate Speed',\n      varType: 'float',\n      min: 0.1,\n      max: 10.0,\n      step: 0.1,\n      default: 5.0,\n    });\n\n    controls.push({\n      type: 'paletteControl',\n      variable: 'colour',\n      colors: [\n        [199, 64, 163],\n        [97, 214, 199],\n        [222, 60, 75],\n        [101, 151, 220],\n        [213, 158, 151],\n        [100, 132, 129],\n        [154, 94, 218],\n        [194, 211, 205],\n        [201, 107, 152],\n        [119, 98, 169],\n        [214, 175, 208],\n        [218, 57, 123],\n        [196, 96, 98],\n        [218, 74, 219],\n        [138, 100, 121],\n        [96, 118, 225],\n        [132, 195, 223],\n        [82, 127, 162],\n        [209, 121, 211],\n        [181, 152, 220],\n      ], // generated here: http://tools.medialab.sciences-po.fr/iwanthue/\n      timePeriod: 16,\n    });\n\n    this.add(controls);\n  }\n\n  init() {\n    this.rotateToggle = false;\n    this.rotateSpeed = 0.1;\n    this.strokeWeight = 1;\n    this.soundType = false;\n    this.intensity = 15;\n    this.shapeSize = 10;\n    this.hue = 0;\n    this.fill = false;\n\n    this.colour = 'pink';\n  }\n\n  polygon(ctx, x, y, radius, sides, startAngle, anticlockwise) { //eslint-disable-line\n    if (sides < 3) return;\n\n    let a = (Math.PI * 2) / sides;\n    a = anticlockwise ? -a : a;\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(startAngle);\n    ctx.moveTo(radius, 0);\n\n    for (let i = 1; i < sides; i += 1) {\n      ctx.lineTo(radius * Math.cos(a * i), radius * Math.sin(a * i));\n    }\n\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  draw({ canvas, context, features, delta }) {\n    let analysed;\n    let rotate = 0;\n\n    if (this.rotateToggle) rotate = ((delta / 1000) * this.rotateSpeed);\n\n    if (this.soundType) {\n      analysed = (features.zcr / 10) * this.intensity;\n    } else {\n      analysed = (features.rms * 10) * this.intensity;\n    }\n\n    context.strokeStyle = this.colour;\n    context.fillStyle = this.colour;\n    context.lineWidth = this.strokeWeight;\n\n    context.beginPath();\n    this.polygon(\n      context,\n      Math.round((canvas.width / 2)),\n      Math.round((canvas.height / 2)),\n      analysed + this.shapeSize,\n      3 + Math.round(analysed / 10),\n      -(Math.PI / 2) + rotate,\n    );\n    context.closePath();\n    context.stroke();\n    if (this.fill) context.fill();\n  }\n}\n\nexport default Polygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modv/sample-modules/Polygon.js\n// module id = 782\n// module chunks = 75"],"sourceRoot":""}