{"version":3,"sources":["webpack:///./src/modv/sample-modules/Phyllotaxis.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC,aAAa,uBAAuB;AACpC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,uBAAuB;AACpC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,QAAQ,oBAAoB;AAC5B;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,WAAW,mCAAmC;AAC9C;;AAEA;AACA;AACA,WAAW,gBAAgB;;AAE3B,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH","file":"static/js/81.bc569c7823849a7f5f2c.js","sourcesContent":["function dist(x1, y1, x2, y2) {\n  return Math.hypot(x2 - x1, y2 - y1);\n}\n\nexport default {\n  meta: {\n    type: '2d',\n    name: 'Phyllotaxis',\n    author: 'Alex J. Mold',\n    version: '1.2.0',\n    audioFeatures: ['rms', 'zcr'],\n  },\n\n  props: {\n    intensity: {\n      type: 'int',\n      label: 'RMS/ZCR Intensity',\n      min: 0,\n      max: 30,\n      step: 1,\n      default: 15,\n    },\n\n    soundType: {\n      type: 'bool',\n      label: 'RMS (unchecked) / ZCR (checked)',\n      default: false,\n    },\n\n    color: {\n      control: {\n        type: 'paletteControl',\n        default: { r: 199, g: 64, b: 163 },\n        options: {\n          colors: [\n            { r: 199, g: 64, b: 163 },\n            { r: 97, g: 214, b: 199 },\n            { r: 222, g: 60, b: 75 },\n            { r: 101, g: 151, b: 220 },\n            { r: 213, g: 158, b: 151 },\n            { r: 100, g: 132, b: 129 },\n            { r: 154, g: 94, b: 218 },\n            { r: 194, g: 211, b: 205 },\n            { r: 201, g: 107, b: 152 },\n            { r: 119, g: 98, b: 169 },\n            { r: 214, g: 175, b: 208 },\n            { r: 218, g: 57, b: 123 },\n            { r: 196, g: 96, b: 98 },\n            { r: 218, g: 74, b: 219 },\n            { r: 138, g: 100, b: 121 },\n            { r: 96, g: 118, b: 225 },\n            { r: 132, g: 195, b: 223 },\n            { r: 82, g: 127, b: 162 },\n            { r: 209, g: 121, b: 211 },\n            { r: 181, g: 152, b: 220 },\n          ], // generated here: http://tools.medialab.sciences-po.fr/iwanthue/\n          duration: 500,\n        },\n      },\n    },\n  },\n\n  init(canvas) {\n    this.soundType = false; // false RMS, true ZCR\n\n    this.particles = [];\n    this.limit = 1500;\n    this.goldenRatio = ((Math.sqrt(5) + 1) / 2) - 1;\n    this.goldenAngle = this.goldenRatio * (2 * Math.PI);\n    this.circleRadius = (canvas.width * 0.5) - 20;\n\n    this.color = '#fff';\n\n    this.setupPhyllotaxis(canvas);\n  },\n\n  resize(canvas) {\n    this.particles = [];\n    this.limit = 1500;\n    this.goldenRatio = ((Math.sqrt(5) + 1) / 2) - 1;\n    this.goldenAngle = this.goldenRatio * (2 * Math.PI);\n    this.circleRadius = (canvas.width * 0.5) - 20;\n\n    this.setupPhyllotaxis(canvas);\n  },\n\n  draw({ context, features }) {\n    if (this.soundType) {\n      this.analysed = (features.zcr / 10) * this.intensity;\n    } else {\n      this.analysed = (features.rms * 10) * this.intensity;\n    }\n\n    for (let i = 0; i < this.particles.length; i += 1) {\n      this.particles[i].show(\n        context,\n        this.analysed,\n        this.color,\n      );\n      this.particles[i].update();\n    }\n  },\n\n  setupPhyllotaxis(canvas) {\n    const { goldenAngle, limit, circleRadius } = this;\n    this.particles = [];\n\n    const cx = canvas.width / 2;\n    const cy = canvas.height / 2;\n    const { width, height } = canvas;\n\n    for (let i = 1; i <= limit; i += 1) {\n      const particleRadius = 1;\n      const ratio = i / limit;\n      const angle = i * goldenAngle;\n      const spiralRadius = ratio * circleRadius;\n      const x = cx + (Math.cos(angle) * spiralRadius);\n      const y = cy + (Math.sin(angle) * spiralRadius);\n\n      this.particles.push(\n        new (this.Particle())(width, height, x, y, particleRadius, '#fff'),\n      );\n    }\n  },\n\n  Particle() { //eslint-disable-line\n    return function Particle(width, height, x, y, r, c) {\n      this.x = x;\n      this.y = y;\n      this.r = r;\n      this.c = c;\n      this.startX = x;\n      this.startY = y;\n      this.velX = 0;\n      this.velY = 0;\n      this.targetX = width / 2;\n      this.targetY = height / 2;\n      this.easing = 0.02;\n\n      this.show = (context, radiusModifier, color) => {\n        context.fillStyle = this.c;\n        // context.beginPath();\n        // context.arc(\n        //   this.x,\n        //   this.y,\n        //   this.r * radiusModifier,\n        //   0,\n        //   2 * Math.PI,\n        // );\n\n        const size = this.r * radiusModifier;\n        context.fillStyle = color;\n        context.fillRect(\n          this.x - (size / 2),\n          this.y - (size / 2),\n          size,\n          size,\n        );\n        // context.fill();\n      };\n\n      this.update = () => {\n        const d = dist(this.x, this.y, this.targetX, this.targetY);\n\n        this.easing = d / 3500;\n\n        // move to position\n        const dx = this.targetX - this.x;\n        this.x += dx * this.easing;\n\n        const dy = this.targetY - this.y;\n        this.y += dy * this.easing;\n\n        if (d < 10) {\n          this.targetX = this.startX;\n          this.targetY = this.startY;\n        }\n\n        if (dist(this.x, this.y, this.startX, this.startY) < 20) {\n          this.targetX = width / 2;\n          this.targetY = height / 2;\n        }\n      };\n    };\n  },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modv/sample-modules/Phyllotaxis.js\n// module id = 797\n// module chunks = 81"],"sourceRoot":""}