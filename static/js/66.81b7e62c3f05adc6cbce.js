webpackJsonp([66],{815:function(n,e){n.exports='/*{\n  "DESCRIPTION": "Pixel with brightness levels below the threshold do not update.",\n  "CREDIT": "by VIDVOX",\n  "CATEGORIES": [\n    "Glitch"\n  ],\n  "INPUTS": [\n    {\n      "NAME": "inputImage",\n      "TYPE": "image"\n    },\n    {\n      "NAME": "thresh",\n      "LABEL": "Threshold",\n      "TYPE": "float",\n      "MIN": 0,\n      "MAX": 1,\n      "DEFAULT": 0.25\n    },\n    {\n      "NAME": "gain",\n      "LABEL": "Gain",\n      "TYPE": "float",\n      "MIN": 0,\n      "MAX": 2,\n      "DEFAULT": 1\n    },\n    {\n      "NAME": "hardCutoff",\n      "LABEL": "Hard Cutoff",\n      "TYPE": "bool",\n      "DEFAULT": true\n    },\n    {\n      "NAME": "invert",\n      "LABEL": "Invert",\n      "TYPE": "bool",\n      "DEFAULT": false\n    }\n  ],\n  "PASSES": [\n    {\n      "TARGET": "bufferVariableNameA",\n      "persistent": true\n    },\n    {}\n  ]\n}*/\n\nvoid main()\n{\n\tvec4\t\tfreshPixel = IMG_PIXEL(inputImage,gl_FragCoord.xy);\n\tvec4\t\tstalePixel = IMG_PIXEL(bufferVariableNameA,gl_FragCoord.xy);\n\tfloat\t\tbrightLevel = (freshPixel.r + freshPixel.b + freshPixel.g) / 3.0;\n\tif (invert)\n\t\tbrightLevel = 1.0 - brightLevel;\n\tbrightLevel = brightLevel * gain;\n\tif (hardCutoff)\t{\n\t\tif (brightLevel < thresh)\n\t\t\tbrightLevel = 1.0;\n\t\telse\n\t\t\tbrightLevel = 0.0;\n\t}\n\tgl_FragColor = mix(freshPixel,stalePixel, brightLevel);\n}\n'}});