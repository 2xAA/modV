{"version":3,"sources":["webpack:///./src/modv/sample-modules/Concentrics.js"],"names":[],"mappings":";;;;;;;;AAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,SAAS;AAC1C;;AAEA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,mCAAmC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yFAAyF;AACzF,gGAAgG;AAChG;;AAEA,0FAA0F;AAC1F,iGAAiG;AACjG;AACA;AACA;;AAEA","file":"static/js/82.f208b3f396d296e164ca.js","sourcesContent":["import { Module2D } from 'modv';\n\nclass Concentrics extends Module2D {\n  constructor() {\n    super({\n      info: {\n        name: 'Concentrics',\n        author: '2xAA',\n        version: 0.2,\n        meyda: ['zcr', 'rms'],\n      },\n    });\n\n    const controls = [];\n\n    controls.push({\n      type: 'checkboxControl',\n      variable: 'rms',\n      label: 'Use RMS',\n      checked: false,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'intensity',\n      label: 'RMS/ZCR Intensity',\n      varType: 'int',\n      min: 0,\n      max: 30,\n      step: 1,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'spacing',\n      label: 'Circle Spacing',\n      varType: 'int',\n      min: 0,\n      max: 100,\n      step: 1,\n      default: 5,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'objectDistance',\n      label: 'Object Distance',\n      varType: 'int',\n      min: 0,\n      max: 200,\n      step: 1,\n      default: 40,\n    });\n\n    controls.push({\n      type: 'rangeControl',\n      variable: 'strokeWeight',\n      label: 'Stroke Weight',\n      varType: 'int',\n      min: 1,\n      max: 20,\n      step: 1,\n      default: 1,\n      strict: true,\n    });\n\n    this.add(controls);\n  }\n\n  Concentric() { //eslint-disable-line\n    return function Concentric(canvas) {\n      this.x = canvas.width / 2;\n      this.y = canvas.height / 2;\n      this.hue = Math.round(Math.random() * 360);\n\n      this.draw = function draw(ctx, zcr, strokeWeight, spacing) {\n        ctx.strokeStyle = `hsl(${this.hue}, 50%, 50%)`;\n        ctx.lineWidth = strokeWeight;\n\n        for (let i = 0; i < zcr; i += 1) {\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, i * spacing, 0, 2 * Math.PI);\n          ctx.closePath();\n          ctx.stroke();\n        }\n\n        if (this.hue > 360) this.hue = 0;\n        else this.hue += 0.2;\n      };\n    };\n  }\n\n  init(canvas) {\n    this.rms = false;\n    this.intensity = 1;\n    this.spacing = 5;\n    this.strokeWeight = 1;\n    this.objectDistance = 40;\n\n    this.circle1 = new (this.Concentric())(canvas);\n    this.circle2 = new (this.Concentric())(canvas);\n  }\n\n  draw({ canvas, context, features, delta }) {\n    let zcr = features.zcr;\n    if (this.rms) zcr = features.rms;\n\n    zcr *= this.intensity;\n    if (this.rms) {\n      zcr *= 50;\n    }\n\n    this.circle1.x = ((canvas.width / 2) + Math.sin(delta / 1000) * this.objectDistance); //eslint-disable-line\n    this.circle1.y = ((canvas.height / 2) + Math.cos(delta / 1000) * (this.objectDistance / 2)); //eslint-disable-line\n    this.circle1.draw(context, zcr, this.strokeWeight, this.spacing);\n\n    this.circle2.x = ((canvas.width / 2) + -Math.sin(delta / 1000) * this.objectDistance); //eslint-disable-line\n    this.circle2.y = (canvas.height / 2) + (-Math.cos(delta / 1000) * (this.objectDistance / 2)); //eslint-disable-line\n    this.circle2.draw(context, zcr, this.strokeWeight, this.spacing);\n  }\n}\n\nexport default Concentrics;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modv/sample-modules/Concentrics.js\n// module id = 769\n// module chunks = 82"],"sourceRoot":""}