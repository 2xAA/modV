webpackJsonp([88],{1768:function(n,o){n.exports="precision mediump float;\nuniform sampler2D u_modVCanvas;\nuniform float u_delta;\nuniform vec3 iResolution;\nvarying vec2 vUv;\nvarying vec2 fragCoord;\n\n// from here: https://www.shadertoy.com/view/Ms23DR\n// Loosely based on postprocessing shader by inigo quilez, License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 curve(vec2 uv) {\n\tuv = (uv - 0.5) * 2.0;\n\tuv *= 1.1;\n\tuv.x *= 1.0 + pow((abs(uv.y) / 5.0), 2.0);\n\tuv.y *= 1.0 + pow((abs(uv.x) / 4.0), 2.0);\n\tuv  = (uv / 2.0) + 0.5;\n\tuv =  uv *0.92 + 0.04;\n\treturn uv;\n}\n\nvoid main() {\n\tvec2 uv = vUv;\n\n\tuv = curve( uv );\n\tvec3 oricol = texture2D( u_modVCanvas, vec2(uv.x,uv.y) ).xyz;\n\tvec3 col;\n\tfloat x =  sin(0.3*u_delta+uv.y*21.0)*sin(0.7*u_delta+uv.y*29.0)*sin(0.3+0.33*u_delta+uv.y*31.0)*0.0017;\n\n\tcol.r = texture2D(u_modVCanvas,vec2(x+uv.x+0.001,uv.y+0.001)).x+0.05;\n\tcol.g = texture2D(u_modVCanvas,vec2(x+uv.x+0.000,uv.y-0.002)).y+0.05;\n\tcol.b = texture2D(u_modVCanvas,vec2(x+uv.x-0.002,uv.y+0.000)).z+0.05;\n\tcol.r += 0.08*texture2D(u_modVCanvas,0.75*vec2(x+0.025, -0.027)+vec2(uv.x+0.001,uv.y+0.001)).x;\n\tcol.g += 0.05*texture2D(u_modVCanvas,0.75*vec2(x+-0.022, -0.02)+vec2(uv.x+0.000,uv.y-0.002)).y;\n\tcol.b += 0.08*texture2D(u_modVCanvas,0.75*vec2(x+-0.02, -0.018)+vec2(uv.x-0.002,uv.y+0.000)).z;\n\n\tcol = clamp(col*0.6+0.4*col*col*1.0,0.0,1.0);\n\n\tfloat vig = (0.0 + 1.0*16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y));\n\tcol *= vec3(pow(vig,0.3));\n\n\tcol *= vec3(0.95,1.05,0.95);\n\tcol *= 2.8;\n\n\tfloat scans = clamp( 0.35+0.35*sin(3.5*u_delta+uv.y*iResolution.y*1.5), 0.0, 1.0);\n\n\tfloat s = pow(scans,1.7);\n\tcol = col*vec3( 0.4+0.7*s) ;\n\n\tcol *= 1.0+0.01*sin(110.0*u_delta);\n\tif (uv.x < 0.0 || uv.x > 1.0)\n\t\tcol *= 0.0;\n\tif (uv.y < 0.0 || uv.y > 1.0)\n\t\tcol *= 0.0;\n\n\tcol*=1.0-0.65*vec3(clamp((mod(fragCoord.x, 2.0)-1.0)*2.0,0.0,1.0));\n\n\tfloat comp = smoothstep( 0.1, 0.9, sin(u_delta) );\n\n\t// Remove the next line to stop cross-fade between original and postprocess\n\t//\tcol = mix( col, oricol, comp );\n\n\tgl_FragColor = vec4(col,1.0);\n}"}});