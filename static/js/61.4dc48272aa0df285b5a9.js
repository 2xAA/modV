webpackJsonp([61],{816:function(t,n){t.exports='/*{\n\t"CREDIT": "by mojovideotech",\n\t"DESCRIPTION": "",\n\t"CATEGORIES": [\n\t\t"generator"\n\t],\n\t"INPUTS": [\n\t{\n\t\t"NAME" : \t\t"center",\n\t\t"TYPE" : \t\t"point2D",\n\t\t"DEFAULT" :\t \t[ 0.0, 0.0 ],\n\t\t"MAX" : \t\t[ 1.0, 1.0 ],\n     \t"MIN" : \t\t[ -1.0, -1.0 ]\n\t},\n\t{\n\t\t"NAME" : \t\t"scale",\n\t\t"TYPE" : \t\t"float",\n\t\t"DEFAULT" : \t2.0,\n\t\t"MIN" : \t\t0.5,\n\t\t"MAX" : \t\t3.0\n\t},\n\t{\n\t\t"NAME" : \t\t"rate",\n\t\t"TYPE" : \t\t"float",\n\t\t"DEFAULT" : \t0.15,\n\t\t"MIN" : \t\t-0.5,\n\t\t"MAX" : \t\t0.5\n\t},\n\t{\n     \t"NAME" : \t\t"fine",\n      \t"TYPE" :\t\t"float",\n      \t"DEFAULT" :\t\t0.35,\n      \t"MIN" : \t\t0.01,\n      \t"MAX" : \t\t0.5\n    },\n\t{\n\t\t"NAME" : \t\t"loops",\n\t\t"TYPE" : \t\t"float",\n\t\t"DEFAULT" :\t    32.0,\n\t\t"MIN" : \t\t12.0,\n\t\t"MAX" : \t\t100.0\n\t},\n\t{\n      \t"NAME" : \t\t"r1",\n      \t"TYPE" : \t\t"float",\n      \t"DEFAULT" :\t\t-0.25,\n      \t"MIN" : \t\t-0.5,\n      \t"MAX" : \t\t0.5\n    },\n    {\n      \t"NAME" : \t\t"r2",\n      \t"TYPE" : \t\t"float",\n      \t"DEFAULT" :\t\t0.275,\n      \t"MIN" : \t\t-0.5,\n      \t"MAX" : \t\t0.5\n    },\n\t{\n\t\t"NAME" : \t\t"brightness",\n\t\t"TYPE" : \t\t"float",\n\t\t"DEFAULT" :  \t1.5,\n\t\t"MIN" : \t\t0.1,\n\t\t"MAX" : \t\t5.0\n\t},\n\t{\n\t\t"NAME" : \t\t"bleed",\n\t\t"TYPE" : \t\t"float",\n\t\t"DEFAULT" :  \t0.75,\n\t\t"MIN" : \t\t0.01,\n\t\t"MAX" : \t\t0.99\n\t},\n\t{\n\t\t"NAME" : \t\t"edge",\n\t\t"TYPE" : \t\t"float",\n\t\t"DEFAULT" :  \t0.5,\n\t\t"MIN" : \t\t0.01,\n\t\t"MAX" : \t\t0.99\n\t},\n\t{\n\t\t"NAME":\t\t\t"color",\n\t\t"TYPE": \t\t"color",\n\t\t"DEFAULT": \t\t[ 0.6,\n\t\t\t\t\t\t 0.4,\n\t\t\t\t\t\t 0.9,\n\t\t\t\t\t\t 1.0\n\t\t\t\t\t\t]\n\t},\n\t{\n   \t\t"NAME" : \t\t"flipH",\n     \t"TYPE" : \t\t"bool",\n     \t"DEFAULT" : \t false\n   \t},\t\n\t{\n   \t\t"NAME" : \t\t"flipV",\n     \t"TYPE" : \t\t"bool",\n     \t"DEFAULT" : \tfalse\n   \t},\n\t{\n   \t\t"NAME" : \t\t"mirrorH",\n     \t"TYPE" : \t\t"bool",\n     \t"DEFAULT" : \ttrue\n   \t},\t\n\t{\n   \t\t"NAME" : \t\t"mirrorV",\n     \t"TYPE" : \t\t"bool",\n     \t"DEFAULT" : \tfalse\n   \t},\n   \t\t{\n   \t\t"NAME" : \t\t"blend",\n     \t"TYPE" : \t\t"bool",\n     \t"DEFAULT" : \tfalse\n   \t},\n   \t{\n   \t\t"NAME" : \t\t"invert",\n     \t"TYPE" : \t\t"bool",\n     \t"DEFAULT" : \tfalse\n   \t}\n\n\n\t]\n}*/\n\n\n\n////////////////////////////////////////////////////////////\n// FractilianParabolicCircleInversion  by mojovideotech\n//\n// based on :\n// Fractal Soup  by @P_Malin\n// shadertoy.com/\\lsB3zR\n//\n// License: \n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n\nvec2 CircleInversion(vec2 vPos, vec2 vOrigin, float fRadius) {\t\n\tvec2 vOP = vPos - vOrigin;\n\treturn vOrigin - vOP * fRadius * fRadius / dot(vOP, vOP);\n}\n\nfloat Parabola( float x, float n ) { return pow( 4.0*x*(1.0-x), n ); }\n\nvoid main()\n{\n\tvec2 pos = gl_FragCoord.xy/RENDERSIZE.xy;\n\tif (mirrorV) { if (pos.y < 0.5) pos.y = 1.0-pos.y; }\n\tif (mirrorH) { if (pos.x < 0.5) pos.x = 1.0-pos.x; }\n\tpos.x *= RENDERSIZE.x / RENDERSIZE.y;\n\tif (flipH) { pos.x = 1.0 - pos.x; }\n\tif (flipV) { pos.y = 1.0 - pos.y; }\n\tfloat T = TIME * rate + fine;\n\tfloat TT = T * 0.05;\n\tfloat drift = mix(pos.x+sin(TT),sin(pos.x)*cos(pos.x-TT),sin(pos.y-TT));\n\tvec2 spin = vec2( sin(T*r1), -sin(T*r2))+center;\n\tfloat l = 0.0, b = 0.0, m = 10000.0;\n\tvec2 p = pos.xy;\t\n\tfor(int i=0; i<100; i++) {\n\t\tp.x = abs(p.x);\n\t\tp = p * scale + spin;\n\t\tp = CircleInversion(p, vec2(0.5, 0.5), 1.0);\n\t\tl = length(p);\n\t\tm = min(l, m);\n\t\tm += Parabola(m, drift);\n\t\tb += 1.0;\n\t\tif (b>loops) break; \n}\n\t\n\tvec3 col = color.rgb * l * l * brightness;\n\tcol = mix(col,pow(col,vec3(m)),1.0-edge);\n\tcol = mix(col,col*fract(m*col+m),bleed);\n\tif (blend) { col = 1.0 - exp(-col); }\n\tif (invert) { gl_FragColor = vec4(1.0-col,1.0); }\n\telse\n\tgl_FragColor = vec4(col,1.0);\n}\n\n'}});