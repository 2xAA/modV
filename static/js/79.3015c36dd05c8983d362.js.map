{"version":3,"sources":["webpack:///./src/modv/sample-modules/Polygon.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC,aAAa,uBAAuB;AACpC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,uBAAuB;AACpC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH,QAAQ,mCAAmC;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,gEAAgE;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;AACA,GAAG;AACH","file":"static/js/79.3015c36dd05c8983d362.js","sourcesContent":["export default {\n  meta: {\n    type: '2d',\n    name: 'Polygon',\n    author: '2xAA',\n    audioFeatures: ['rms', 'zcr'],\n    version: '0.2.0',\n  },\n\n  props: {\n    intensity: {\n      type: 'int',\n      label: 'RMS/ZCR Intensity',\n      min: 0,\n      max: 30,\n      step: 1,\n      default: 15,\n    },\n\n    shapeSize: {\n      type: 'int',\n      label: 'Shape Size',\n      min: 0,\n      max: 300,\n      step: 1,\n      default: 60,\n    },\n\n    strokeWeight: {\n      type: 'int',\n      label: 'Stroke Weight',\n      min: 1,\n      max: 20,\n      step: 1,\n      default: 1,\n      strict: true,\n    },\n\n    fill: {\n      type: 'bool',\n      label: 'Fill',\n      default: false,\n    },\n\n    rotateToggle: {\n      type: 'bool',\n      label: 'Rotate',\n      default: false,\n    },\n\n    rotateSpeed: {\n      type: 'float',\n      label: 'Rotate Speed',\n      min: 0.1,\n      max: 10.0,\n      step: 0.1,\n      default: 5.0,\n    },\n\n    color: {\n      control: {\n        type: 'paletteControl',\n        default: { r: 199, g: 64, b: 163 },\n        options: {\n          colors: [\n            { r: 199, g: 64, b: 163 },\n            { r: 97, g: 214, b: 199 },\n            { r: 222, g: 60, b: 75 },\n            { r: 101, g: 151, b: 220 },\n            { r: 213, g: 158, b: 151 },\n            { r: 100, g: 132, b: 129 },\n            { r: 154, g: 94, b: 218 },\n            { r: 194, g: 211, b: 205 },\n            { r: 201, g: 107, b: 152 },\n            { r: 119, g: 98, b: 169 },\n            { r: 214, g: 175, b: 208 },\n            { r: 218, g: 57, b: 123 },\n            { r: 196, g: 96, b: 98 },\n            { r: 218, g: 74, b: 219 },\n            { r: 138, g: 100, b: 121 },\n            { r: 96, g: 118, b: 225 },\n            { r: 132, g: 195, b: 223 },\n            { r: 82, g: 127, b: 162 },\n            { r: 209, g: 121, b: 211 },\n            { r: 181, g: 152, b: 220 },\n          ], // generated here: http://tools.medialab.sciences-po.fr/iwanthue/\n          duration: 500,\n        },\n      },\n    },\n  },\n\n  data: {\n    hue: 0,\n  },\n\n  draw({ canvas, context, features, delta }) {\n    let analysed;\n    let rotate = 0;\n\n    if (this.rotateToggle) rotate = ((delta / 1000) * this.rotateSpeed);\n\n    if (this.soundType) {\n      analysed = (features.zcr / 10) * this.intensity;\n    } else {\n      analysed = (features.rms * 10) * this.intensity;\n    }\n\n    context.strokeStyle = this.color;\n    context.fillStyle = this.color;\n    context.lineWidth = this.strokeWeight;\n\n    context.beginPath();\n    this.polygon(\n      context,\n      Math.round((canvas.width / 2)),\n      Math.round((canvas.height / 2)),\n      analysed + this.shapeSize,\n      3 + Math.round(analysed / 10),\n      -(Math.PI / 2) + rotate,\n    );\n    context.closePath();\n    context.stroke();\n    if (this.fill) context.fill();\n  },\n\n  polygon(ctx, x, y, radius, sides, startAngle, anticlockwise) { //eslint-disable-line\n    if (sides < 3) return;\n\n    let a = (Math.PI * 2) / sides;\n    a = anticlockwise ? -a : a;\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(startAngle);\n    ctx.moveTo(radius, 0);\n\n    for (let i = 1; i < sides; i += 1) {\n      ctx.lineTo(radius * Math.cos(a * i), radius * Math.sin(a * i));\n    }\n\n    ctx.closePath();\n    ctx.restore();\n  },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modv/sample-modules/Polygon.js\n// module id = 800\n// module chunks = 79"],"sourceRoot":""}