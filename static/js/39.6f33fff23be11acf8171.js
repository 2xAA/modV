webpackJsonp([39],{813:function(t,n){t.exports='/*{\r\n\t"DESCRIPTION": "Shifts pixels up and down",\r\n\t"CREDIT": "by VIDVOX",\r\n\t"CATEGORIES": [\r\n\t\t"Glitch", "Distortion Effect"\r\n\t],\r\n\t"INPUTS": [\r\n\t\t{\r\n\t\t\t"NAME": "inputImage",\r\n\t\t\t"TYPE": "image"\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "hPhase",\r\n\t\t\t"LABEL": "Horizontal Phase",\r\n\t\t\t"TYPE": "float",\r\n\t\t\t"MIN": 0.0,\r\n\t\t\t"MAX": 1.0,\r\n\t\t\t"DEFAULT": 0.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "hFrequency",\r\n\t\t\t"LABEL": "Horizontal Frequency",\r\n\t\t\t"TYPE": "float",\r\n\t\t\t"MIN": -16.0,\r\n\t\t\t"MAX": 16.0,\r\n\t\t\t"DEFAULT": 1.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "hRandom",\r\n\t\t\t"LABEL": "Horizontal Random",\r\n\t\t\t"TYPE": "float",\r\n\t\t\t"MIN": 0.0,\r\n\t\t\t"MAX": 1.0,\r\n\t\t\t"DEFAULT": 0.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "vPhase",\r\n\t\t\t"LABEL": "Vertical Phase",\r\n\t\t\t"TYPE": "float",\r\n\t\t\t"MIN": 0.0,\r\n\t\t\t"MAX": 1.0,\r\n\t\t\t"DEFAULT": 0.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "vFrequency",\r\n\t\t\t"LABEL": "Vertical Frequency",\r\n\t\t\t"TYPE": "float",\r\n\t\t\t"MIN": -16.0,\r\n\t\t\t"MAX": 16.0,\r\n\t\t\t"DEFAULT": 0.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "vRandom",\r\n\t\t\t"LABEL": "Vertical Random",\r\n\t\t\t"TYPE": "float",\r\n\t\t\t"MIN": 0.0,\r\n\t\t\t"MAX": 1.0,\r\n\t\t\t"DEFAULT": 0.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "doSin",\r\n\t\t\t"LABEL": "Sinusoidal",\r\n\t\t\t"TYPE": "bool",\r\n\t\t\t"DEFAULT": 1.0\r\n\t\t},\r\n\t\t{\r\n\t\t\t"NAME": "mirror",\r\n\t\t\t"LABEL": "Mirror",\r\n\t\t\t"TYPE": "bool",\r\n\t\t\t"DEFAULT": 1.0\r\n\t\t}\r\n\t]\r\n}*/\r\n\r\n\r\nfloat\t\tPI_CONST = 3.14159265359;\r\n\r\n\r\nfloat rand(vec2 co){\r\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\r\n}\r\n\r\n\r\nvoid main()\r\n{\r\n\t//\tstart with the pixel\r\n\tvec2 loc = vv_FragNormCoord;\r\n\tfloat modVal = 1.0;\r\n\t\r\n\tif (mirror)\r\n\t\tmodVal = 2.0;\r\n\t\r\n\t//\tshift the loc.x by the frequency * loc.y + phase\r\n\tif (doSin)\r\n\t\tloc.x = mod(hRandom * rand(vec2(TIME * 0.127, loc.x)) + loc.x + sign(hFrequency) * 0.5 * (1.0+cos(2.0 * PI_CONST * (hPhase + hFrequency * loc.y))), modVal);\r\n\telse\r\n\t\tloc.x = mod(hRandom * rand(vec2(TIME * 0.129, loc.x)) + loc.x + hFrequency * loc.y + hPhase, modVal);\r\n\r\n\t//\tshift the loc.y by the frequency * loc.x + phase\r\n\tif (doSin)\r\n\t\tloc.y = mod(vRandom * rand(vec2(TIME * 0.273, loc.y)) + loc.y + sign(vFrequency) * 0.5 * (1.0+cos(2.0 * PI_CONST * (vPhase + vFrequency * loc.x))), modVal);\r\n\telse\r\n\t\tloc.y = mod(vRandom * rand(vec2(TIME * 0.341, loc.y)) +loc.y + vFrequency * loc.x + vPhase, modVal);\r\n\t\t\r\n\tif (loc.x > 1.0)\r\n\t\tloc.x = 2.0 - loc.x;\r\n\t\t\r\n\tif (loc.y > 1.0)\r\n\t\tloc.y = 2.0 - loc.y;\r\n\t\r\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage,loc);\r\n}\r\n'}});