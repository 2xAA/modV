webpackJsonp([30],{841:function(t,n){t.exports='// SaturdayShader Week 16 : Zebre\n// by Joseph Fiola (http://www.joefiola.com)\n// 2015-12-05\n// Based on Patricio Gonzalez Vivo\'s "Wood Texture" example on http://patriciogonzalezvivo.com/2015/thebookofshaders/edit.html#11/wood.frag @patriciogv ( patriciogonzalezvivo.com ) - 2015\n\n\n/*{\n    "CREDIT": "Joseph Fiola",\n\t"DESCRIPTION": "",\n\t"CATEGORIES": [ "Generator","waves", "random" ],\n\t"INPUTS": [\n\t\n\t\t{\n\t\t\t"NAME": "lineScale",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 2.0,\n\t\t\t"MIN": 0.0005,\n\t\t\t"MAX": 10.0\n\t\t},\n\t\t{\n\t\t\t"NAME": "harmonic",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 2.0,\n\t\t\t"MIN": 0.0,\n\t\t\t"MAX": 200.0\n\t\t},\n\t\t{\n\t\t\t"NAME": "lineOffsetSpeed",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 0.5,\n\t\t\t"MIN": 0.0,\n\t\t\t"MAX": 100.0\n\t\t},\n\t\t{\n\t\t\t"NAME": "brightness",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 1.5,\n\t\t\t"MIN": 0.1,\n\t\t\t"MAX": 10.0\n\t\t},\n\t\t{\n\t\t\t"NAME": "contrast",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 0.0,\n\t\t\t"MIN": 0.0,\n\t\t\t"MAX": 0.5\n\t\t},\n\t\t{\n\t\t\t"NAME": "contrastShift",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 0.0,\n\t\t\t"MIN": -0.5,\n\t\t\t"MAX": 0.5\n\t\t},\n\t\t{\n\t\t\t"NAME": "randomMultiply",\n\t\t\t"TYPE": "float",\n\t\t\t"DEFAULT": 43758.5453123,\n\t\t\t"MIN": 0.0,\n\t\t\t"MAX": 50000.0\n\t\t},\n\t\t{\n\t\t\t"NAME": "randomAmt",\n\t\t\t"TYPE": "point2D",\n\t\t\t"DEFAULT": [\n\t\t\t\t12.9898,\n\t\t\t\t78.233\n\t\t\t],\n\t\t\t"MIN": [\n\t\t\t\t0.0,\n\t\t\t\t0.0\n\t\t\t],\n\t\t\t"MAX": [\n\t\t\t\t100.0,\n\t\t\t\t100.0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"NAME": "origin",\n\t\t\t"TYPE": "point2D",\n\t\t\t"DEFAULT": [\n\t\t\t\t0.5,\n\t\t\t\t0.5\n\t\t\t],\n\t\t\t"MIN": [\n\t\t\t\t0.0,\n\t\t\t\t0.0\n\t\t\t],\n\t\t\t"MAX": [\n\t\t\t\t1.0,\n\t\t\t\t1.0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t"NAME": "xyStretch",\n\t\t\t"TYPE": "point2D",\n\t\t\t"DEFAULT": [\n\t\t\t\t6.0,\n\t\t\t\t3.0\n\t\t\t],\n\t\t\t"MIN": [\n\t\t\t\t0.0,\n\t\t\t\t0.0\n\t\t\t],\n\t\t\t"MAX": [\n\t\t\t\t100.0,\n\t\t\t\t100.0\n\t\t\t]\n\t\t},\n\t\t\t\t{\n\t\t\t"NAME": "xyNoiseFactor",\n\t\t\t"TYPE": "point2D",\n\t\t\t"DEFAULT": [\n\t\t\t\t10.0,\n\t\t\t\t12.0\n\t\t\t],\n\t\t\t"MIN": [\n\t\t\t\t0.0,\n\t\t\t\t0.0\n\t\t\t],\n\t\t\t"MAX": [\n\t\t\t\t100.0,\n\t\t\t\t100.0\n\t\t\t]\n\t\t}\n\t\n\t]\n}*/\n\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(randomAmt.x,randomAmt.y))) \n                * randomMultiply);\n}\n\n// Value noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n\n    vec2 i = floor(st);\n\tvec2 f = fract(st);\n\n\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ), \n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ), \n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle *xyNoiseFactor.x),-sin(angle),\n                sin(angle * xyNoiseFactor.y),cos(angle));\n}\n\n\nfloat lines(in vec2 pos, float b){\n    float scale = lineScale;\n    pos *= scale;\n    return smoothstep(0.0,\n                    .5+b*.5,\n                    abs((sin(pos.x*3.1415)+b*2.0))* brightness);\n}\n\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/RENDERSIZE.xy;\n    st -= vec2(origin);\n    st.y *= RENDERSIZE.y/RENDERSIZE.x;\n\n    vec2 pos = st.yx*vec2(xyStretch);\n\n    float pattern = pos.x;\n\n    // Add noise\n    pos = rotate2d( noise(pos) ) * pos * harmonic + (TIME * lineOffsetSpeed);\n    \n    // Draw lines\n    pattern = lines(pos,0.5);\n    \n    //adjust contrast\n\tpattern += smoothstep(0.0+contrast+contrastShift,1.0-contrast+contrastShift, pattern);\n\n    gl_FragColor = vec4(vec3(pattern),1.0);\n}\n'}});