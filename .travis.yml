language: node_js
node_js: '10'
jobs:
  include:
    - stage: Create release
      name: Semantic release
      node_js: lts/*
      script: skip
      deploy:
        provider: script
        cleanup: false
        script: npx semantic-release

    - stage: Build stage
      if: tag IS present
      name: "Build on Windows"
      os: windows
      env:
      - ELECTRON_CACHE=$HOME/.cache/electron
      - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      - USE_HARD_LINKS=false
      - YARN_GPG=no

    - stage: Build stage
      if: tag IS present
      name: "Build on macOS"
      os: osx
      osx_image: xcode12
      env:
      - ELECTRON_CACHE=$HOME/.cache/electron
      - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      - USE_HARD_LINKS=false

    - stage: Build stage
      if: tag IS present
      name: "Build on Linux"
      os: linux
      dist: xenial
      env:
      - ELECTRON_CACHE=$HOME/.cache/electron
      - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      - USE_HARD_LINKS=false
cache:
  directories:
  - node_modules
  - "$HOME/.cache/electron"
  - "$HOME/.cache/electron-builder"
before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then wget https://github.com/Palakis/obs-ndi/releases/download/4.9.0/libndi4_4.5.1-1_amd64.deb && sudo dpkg -i libndi4_4.5.1-1_amd64.deb; fi
  - if [ "$TRAVIS_OS_NAME" = "windows" ] || [ "$TRAVIS_OS_NAME" = "linux" ]; then unset CSC_KEY_PASSWORD CSC_LINK; fi
script:
  - if [ "$TRAVIS_OS_NAME" = "windows" ];   then yarn run electron:build -w; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ];   then yarn run electron:build -m; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then yarn run electron:build -l ; fi
before_cache:
- rm -rf $HOME/.cache/electron-builder/wine
branches:
  except:
  - "/^v\\d+\\.\\d+\\.\\d+$/"
